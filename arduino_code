int dons;
int productA = 0;
int productB = 0;
//=================================
//            Libraries
//=================================
//Library for Servo
#include <Servo.h>

//Library for IR Receiver
#include <IRremote.h>

//Libraries needed for the OLED Display
#include <Wire.h>
#include <Adafruit_GFX.h>
#include <Adafruit_SSD1306.h>

//Libraries Needed for Bluetooth
#include <SoftwareSerial.h>

//=================================
//            Servo
//=================================
Servo flapA;                              //Naming the Servo for easier use
Servo flapB;                              //Naming the Servo for easier use

//=================================
//            LEDs
//=================================
//Define variable for Pin Number of Blue LED
int i = 1;                               //Define global variable for while loop

//=================================
//            IR Sensor
//=================================
long int IRval;                          //Define variable for the reading of a button press
int IR_Recv = 2;                         //Define variable for Pin Number of IR Receiver
IRrecv irrecv(IR_Recv);                  //Calling function from IRremote Library
decode_results results;                  //Calling function from IRremote Library

//=================================
//            OLED Display
//=================================
#define SCREEN_WIDTH 128                 // OLED display width, in pixels
#define SCREEN_HEIGHT 64                 // OLED display height, in pixels

// Declaration for an SSD1306 display connected to I2C (SDA, SCL pins)
Adafruit_SSD1306 display(SCREEN_WIDTH, SCREEN_HEIGHT, &Wire, -1);

//=================================
//            Bluetooth
//=================================
SoftwareSerial BT(10, 11);                //Connects the Arduino pins to the Software Serial
char a;                                   //Variable to store data from bluetooth device

//=================================
//            SETUP
//=================================
void setup() {
  // put your setup code here, to run once:

  Serial.begin(115200);                    //Begin the Serial Monitor for debugging
  BT.begin(9600);                        //Set the data rate for the SoftwareSerial port
  flapA.attach(8);                       //Attach the signal pin of Servo to Arduino Digital Pin 8
  flapB.attach(9);                       //Attach the signal pin of Servo to Arduino Digital Pin 9
  pinMode(4, OUTPUT);               //Define the Arduino Digital Pin for the Red LED
  pinMode(5, OUTPUT);             //Define the Arduino Digital Pin for the Green LED
  pinMode(6, OUTPUT);              //Define the Arduino Digital Pin for the Blue LED
  irrecv.enableIRIn();                   // Starts the receiver

  //DISPLAY
  if (!display.begin(SSD1306_SWITCHCAPVCC, 0x3C)) {
    Serial.println(F("SSD1306 allocation failed"));       //Checks if there is memory to allocate the Display
    for (;;);                                             //If there is no space, the code will not proceed
  }

  display.clearDisplay();                                  //Clears the display for any previous text/image
  display.setTextSize(1);                                  //Sets the tect size
  display.setCursor(0, 10);                                //Sets the position of the cursor
  display.setTextColor(WHITE);                             //Sets the color of text
  display.println("Charitable Smart Vending Machine");     //Text to display
  display.display();                                       //Display will display the required text

}


//=================================
//            LOOP
//=================================
void loop() {
  // put your main code here, to run repeatedly:
  if (dons > 0)
    digitalWrite(6, HIGH);
  else
    digitalWrite(6, LOW);
  if (BT.available())
  {
    a = (BT.read());

    if (a == 'u' || a == 'U')
    {
      Serial.println("User");

    }
    if (a == 'd' || a == 'D')
    {
      Serial.println("Donee");
    }
  }

  if ((a == 'u' || a == 'U') || ((a == 'd' || a == 'D') && (dons > 0)))
    IR();
  else if ((a == 'd' || a == 'D') && (dons = 0))
  {
    display.clearDisplay();
    display.setCursor(0, 10);
    display.print("No Donations Available. Please try as a regular User");
    display.display();
    delay(3000);
    display.clearDisplay();
    display.setCursor(0, 10);
    display.print("Charitable Smart Vending Machine");
    display.display();
  }


}



//=================================
//            IR RECEIVER
//=================================
void IR()
{

  //Uses functions from IRremote Library to read values of buttons on the remote
  if (irrecv.decode(&results)) {

    IRval = results.value;                  //Stores the value of readings in the variable

    //Serial.println(IRval);                //Debug line to check the value of IR Signal

    if (IRval == 33441975)
    {
      Serial.println("Product A Selected");
      productA = 1;
      productB = 0;
      //Serial.println(product);
      display.clearDisplay();
      display.setCursor(0, 10);
      display.print("Product A Selected");
      display.display();
      delay(3000);
      display.clearDisplay();
      display.setCursor(0, 10);
      display.print("Charitable Smart Vending Machine");
      display.display();
    }
    if (IRval == 33446055)
    {
      if (a == 'd' || a == 'D')
        dons--;

      Serial.println("Vend");
      display.clearDisplay();
      display.setCursor(0, 10);
      display.print("Vend");
      display.display();

      if (productA == 1 && productB == 0){
        Serial.println("Product =");
        Serial.print(productA);
        openFlapA();
        Serial.println("Opening Flap A");
      }

      if (productB == 1 && productA == 0){
        openFlapB();
        Serial.println(productB);
        Serial.println("Opening Flap B");
      }

      display.clearDisplay();
      display.setCursor(0, 10);
      display.print("Charitable Smart Vending Machine");
      display.display();
      productA = 0;
      productB = 0;
      a = 0;
      Serial.println(productA);
      Serial.println(productB);

    }
    if (IRval == 33454215)
    {
      Serial.println("Product B Selected");
      productB = 1;
      productA = 0;
      Serial.println(productB);
      display.clearDisplay();
      display.setCursor(0, 10);
      display.print("Product B Selected");
      display.display();
      delay(3000);
      display.clearDisplay();
      display.setCursor(0, 10);
      display.print("Charitable Smart Vending Machine");
      display.display();
    }
    if (a == 'u' || a == 'U') {
      if (IRval == 33431775 || IRval == 1302831295)
      {
        Serial.println("Donate");
        dons++;
        display.clearDisplay();
        display.setCursor(0, 10);
        display.print("Donate");
        display.display();
        delay(2500);
        display.clearDisplay();
        display.setCursor(0, 10);
        display.print("Charitable Smart Vending Machine");
        display.display();
      }
    }
    if (IRval == 33448095)
    {
      Serial.println("Reset/Cancel");
//      product = 0;
      display.clearDisplay();
      display.setCursor(0, 10);
      display.print("Reset/Cancel");
      display.display();
      delay(2500);
      display.clearDisplay();
      display.setCursor(0, 10);
      display.print("Charitable Smart Vending Machine");
      display.display();
    }
    irrecv.resume();

  }
}

void openFlapA()
{
  //if payment successful the flap will open and green LED wil glow
  Serial.println("Flap A");
  digitalWrite(5, HIGH);         //Green LED glows
  flapA.write(0);                       //Servo rotates 90째
  delay(2000);                          //wait for 2 seconds
  flapA.write(100);                        //Servo rotates back 90째 to its initial position
  digitalWrite(5, LOW);          //Green LED stops glowing
}


void openFlapB()
{
  //if payment successful the flap will open and green LED wil glow
  Serial.println("Flap B");
  digitalWrite(5, HIGH);         //Green LED glows
  flapB.write(180);                       //Servo rotates 90째
  delay(2000);                          //wait for 2 seconds
  flapB.write(80);                        //Servo rotates back 90째 to its initial position
  digitalWrite(5, LOW);          //Green LED stops glowing
}
